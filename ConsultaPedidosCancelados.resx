<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAPRSURBVGhD7ZlJaBRBFIaTqLiBivsyGpDBQ8hMMpmZJHoJ
        KogQUXJwAQMKUfEgigdxIQeD4kFRox4UPLkSFEcUNYoHFUUQ1JPEiwpe3DVu4JrE70lP6HR60t1T1T0Z
        yMCja7pfvff/r15XvaouKMjhr6KiojYejzfkEIKa61gsdgb5CokZapZy0BvQQ5B2pAsSN3IAQc0loOcL
        eJPkVyqR/4ctBD5XVlaG1MISYO9oNPrSQkBS6WqAEHq7qq6uHk5k4wCpB9werheRB7Svc/8scoT2TqTJ
        Cj79H51VgZMAZBgAzZFI5EsmYB7ut0NiSiAkEokE2GNXANfpAaD5xc3Uvuw3gSIAbwuFQr81A+8mxCis
        9IUEEZ8K6Dt+AU/bxc/HqqqqSVpJYHw80uY3eJP9lDYCzNGjMPwwQPD/04mRWK6FBDl5LQP4Tp69QC4h
        u5Bl6C3huonrQSQFiMdcf2ZDvrS09H15efkEJRI43mB1LgsRILcw9491Y1z0IHIoGxL42ejGh61OMpmc
        VVZW9sP0csnCtJTfIK9GZYQ8EmilzzyvfnroywpqOP0lEedhYbYGjVW5z3WguLj4D/5OoRvN1k93P4k+
        xjoYgaeyaKkYlBQSW32MwDcCdAA/01X8WKN/AqNHcTpC1aiknR14gvMaH9u5jlH10aN/TU3NYIZxoS6j
        2DpuJiCjCvA14XB4qC4fvtpJl88QuSfTrMq75CtQO+NG+ZEiv+cE7nzA4UAEBiLgPgLMLqORrVI7ue/V
        DzTlOIQ5fb9xytZFu64fwHKGANAIctK8tZRaRvYOzr2dNQjIbK2lRdoloOeSJq12pQG1+11naI4asudu
        RO47arpVkPJZdkcYddqVNbq1aadnpONtCY6WVJRCTl5K2XW5qeUZ8mS2BASwbOYNP21K5YZs4zDURA3z
        wQ1w0ZHtH06LPBIoBPgigN8y+1EuJDHm+fTB2GbWuiEhRyYAXytVqTVA3D/mMQi91UmFxW4jb6P3iRF8
        xP0U0oxsRhpkqkVu0n6byTbPnxCIkcoExABOTiuQcHOE2EMH0s+lctUCXowYJwlvgiDBwfArRn2mNvCm
        Ob/ObwKydvj6cQMCLT6R6CDnd2dzRONppAAvZ6LvdJEwjk5aVNYMTwSMF9r2VMEDqU6mzGcSca7TPAPQ
        0QHn5zMAPsezBUapsZ72DvT2IXtpr+Z+QlZ0HRiUbDA/T5TV1mbhkcUrP37k7QoLge+cIQ3LD/QGSvn6
        aCJxIa/AC1jOTCenq0ZyPPjPojoiJt+CS0pK/kJmnA57ObFB9NflxLHJ6T9WZbfFn9RS5AAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>